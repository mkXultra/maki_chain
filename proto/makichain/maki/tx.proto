syntax = "proto3";

package mkxultra.maki_chain.maki;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/mkXultra/maki_chain/x/maki/types";

// Msg defines the Msg service.
service Msg {
  rpc MintToken (MsgMintToken) returns (MsgMintTokenResponse);
  rpc BurnToken (MsgBurnToken) returns (MsgBurnTokenResponse);
  rpc IsBurning (MsgIsBurning) returns (MsgIsBurningResponse);
  rpc Swap      (MsgSwap     ) returns (MsgSwapResponse     );
}


message MsgMintToken {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin amount  = 2 [(gogoproto.nullable) = false];
}

message MsgMintTokenResponse {}

message MsgBurnToken {
  string                   creator  = 1;
  string                   burnType = 2;
  cosmos.base.v1beta1.Coin amount   = 3 [(gogoproto.nullable) = false];
}

message MsgBurnTokenResponse {}

message MsgIsBurning {
  string creator  = 1;
  string burnType = 2;
}

message MsgIsBurningResponse {}

message MsgSwap {
  string                   creator = 1;
  cosmos.base.v1beta1.Coin amount  = 2 [(gogoproto.nullable) = false];
  string                   denom   = 3;
}

message MsgSwapResponse {}

